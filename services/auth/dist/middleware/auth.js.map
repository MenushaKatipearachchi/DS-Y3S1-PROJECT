{
  "version": 3,
  "sources": ["../../src/middleware/auth.js"],
  "sourcesContent": ["/* eslint-disable import/named */\n\nimport { tracedAsyncHandler } from \"@sliit-foss/functions\";\nimport { protectedRoutes } from \"@app/constants\";\nimport { getUserById } from \"../services\";\nimport { verify, errors } from \"../utils\";\n\nexport const authorizer = tracedAsyncHandler(async function authorizer(req) {\n  if (protectedRoutes.find((route) => req.path.match(new RegExp(route)))) {\n    return;\n  }\n  const token = req.headers.authorization\n    ?.replace(\"Bearer \", \"\")\n    ?.replace(\"null\", \"\");\n\n  if (!token) throw errors.missing_token;\n\n  const decodedUser = verify(token);\n  const user = await getUserById(decodedUser._id);\n\n  if (!user) throw errors.invalid_token;\n  if (!user.is_active) throw errors.user_deactivated;\n\n  req.user = user;\n  req.token = token;\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAmC;AACnC,uBAAgC;AAChC,sBAA4B;AAC5B,mBAA+B;AAExB,MAAM,iBAAa,qCAAmB,sCAAeA,YAAW,KAAK;AAP5E;AAQE,MAAI,iCAAgB,KAAK,CAAC,UAAU,IAAI,KAAK,MAAM,IAAI,OAAO,KAAK,CAAC,CAAC,GAAG;AACtE;AAAA,EACF;AACA,QAAM,SAAQ,eAAI,QAAQ,kBAAZ,mBACV,QAAQ,WAAW,QADT,mBAEV,QAAQ,QAAQ;AAEpB,MAAI,CAAC;AAAO,UAAM,oBAAO;AAEzB,QAAM,kBAAc,qBAAO,KAAK;AAChC,QAAM,OAAO,UAAM,6BAAY,YAAY,GAAG;AAE9C,MAAI,CAAC;AAAM,UAAM,oBAAO;AACxB,MAAI,CAAC,KAAK;AAAW,UAAM,oBAAO;AAElC,MAAI,OAAO;AACX,MAAI,QAAQ;AACd,GAlB6C,aAkB5C;",
  "names": ["authorizer"]
}
