{
  "version": 3,
  "sources": ["../../../../../src/modules/auth/api/v1/schema.js"],
  "sourcesContent": ["import { Joi } from \"celebrate\";\r\n\r\nexport const loginSchema = Joi.object({\r\n  email: Joi.string().email().required(),\r\n  password: Joi.string().required(),\r\n});\r\n\r\nexport const registerSchema = Joi.object({\r\n  name: Joi.string().required(),\r\n  email: Joi.string().email().required(),\r\n  password: Joi.string()\r\n    .regex(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&^()._*?]{8,30}$/\r\n    )\r\n    .required()\r\n    .error((errors) =>\r\n      errors.map((err) => {\r\n        if (err.code === \"string.pattern.base\")\r\n          err.message = `Password should have at least one lowercase letter, one uppercase letter, one number and one special character and should be at least 8 characters long`;\r\n        return err;\r\n      })\r\n    ),\r\n  address: Joi.string().optional(),\r\n  role: Joi.string().valid(\"buyer\", \"seller\").default(\"buyer\"),\r\n  verification_code: Joi.string().optional().allow(null),\r\n});\r\n\r\nexport const refreshTokenSchema = Joi.object({\r\n  refresh_token: Joi.string().required(),\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoB;AAEb,MAAM,cAAc,qBAAI,OAAO;AAAA,EACpC,OAAO,qBAAI,OAAO,EAAE,MAAM,EAAE,SAAS;AAAA,EACrC,UAAU,qBAAI,OAAO,EAAE,SAAS;AAClC,CAAC;AAEM,MAAM,iBAAiB,qBAAI,OAAO;AAAA,EACvC,MAAM,qBAAI,OAAO,EAAE,SAAS;AAAA,EAC5B,OAAO,qBAAI,OAAO,EAAE,MAAM,EAAE,SAAS;AAAA,EACrC,UAAU,qBAAI,OAAO,EAClB;AAAA,IACC;AAAA,EACF,EACC,SAAS,EACT;AAAA,IAAM,CAAC,WACN,OAAO,IAAI,CAAC,QAAQ;AAClB,UAAI,IAAI,SAAS;AACf,YAAI,UAAU;AAChB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACF,SAAS,qBAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,MAAM,qBAAI,OAAO,EAAE,MAAM,SAAS,QAAQ,EAAE,QAAQ,OAAO;AAAA,EAC3D,mBAAmB,qBAAI,OAAO,EAAE,SAAS,EAAE,MAAM,IAAI;AACvD,CAAC;AAEM,MAAM,qBAAqB,qBAAI,OAAO;AAAA,EAC3C,eAAe,qBAAI,OAAO,EAAE,SAAS;AACvC,CAAC;",
  "names": []
}
