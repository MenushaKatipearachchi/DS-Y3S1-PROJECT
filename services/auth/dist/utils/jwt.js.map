{
  "version": 3,
  "sources": ["../../src/utils/jwt.js"],
  "sourcesContent": ["import jwt from \"jsonwebtoken\";\r\nimport { moduleLogger } from \"@sliit-foss/module-logger\";\r\nimport config from \"../config\";\r\nimport { errors } from \"./constants\";\r\n\r\nconst logger = moduleLogger(\"Jwt-util\");\r\n\r\nexport const verify = (token, ignoreExpiry = false) => {\r\n  try {\r\n    const verificationMethod = ignoreExpiry ? \"decode\" : \"verify\";\r\n    return jwt[verificationMethod](token, config.JWT_SECRET);\r\n  } catch (error) {\r\n    logger.error(`Jwt verification failed - ${error.message}`);\r\n    if (error.message === \"jwt expired\") {\r\n      throw errors.token_expired;\r\n    }\r\n    throw errors.invalid_token;\r\n  }\r\n};\r\n\r\nexport const generateTokens = (user) => {\r\n  [\"password\", \"created_at\", \"updated_at\"].forEach((key) => delete user[key]);\r\n\r\n  //  access token\r\n  const accessToken = jwt.sign(user, config.JWT_SECRET, {\r\n    expiresIn: config.ACCESS_TOKEN_EXPIRY,\r\n  });\r\n\r\n  //  refresh token\r\n  const refreshToken = jwt.sign(\r\n    {\r\n      access_token: accessToken,\r\n    },\r\n    config.JWT_SECRET,\r\n    {\r\n      expiresIn: config.REFRESH_TOKEN_EXPIRY,\r\n    }\r\n  );\r\n  return { access_token: accessToken, refresh_token: refreshToken };\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB;AAChB,2BAA6B;AAC7B,oBAAmB;AACnB,uBAAuB;AAEvB,MAAM,aAAS,mCAAa,UAAU;AAE/B,MAAM,SAAS,wBAAC,OAAO,eAAe,UAAU;AACrD,MAAI;AACF,UAAM,qBAAqB,eAAe,WAAW;AACrD,WAAO,oBAAAA,QAAI,kBAAkB,EAAE,OAAO,cAAAC,QAAO,UAAU;AAAA,EACzD,SAAS,OAAP;AACA,WAAO,MAAM,6BAA6B,MAAM,SAAS;AACzD,QAAI,MAAM,YAAY,eAAe;AACnC,YAAM,wBAAO;AAAA,IACf;AACA,UAAM,wBAAO;AAAA,EACf;AACF,GAXsB;AAaf,MAAM,iBAAiB,wBAAC,SAAS;AACtC,GAAC,YAAY,cAAc,YAAY,EAAE,QAAQ,CAAC,QAAQ,OAAO,KAAK,GAAG,CAAC;AAG1E,QAAM,cAAc,oBAAAD,QAAI,KAAK,MAAM,cAAAC,QAAO,YAAY;AAAA,IACpD,WAAW,cAAAA,QAAO;AAAA,EACpB,CAAC;AAGD,QAAM,eAAe,oBAAAD,QAAI;AAAA,IACvB;AAAA,MACE,cAAc;AAAA,IAChB;AAAA,IACA,cAAAC,QAAO;AAAA,IACP;AAAA,MACE,WAAW,cAAAA,QAAO;AAAA,IACpB;AAAA,EACF;AACA,SAAO,EAAE,cAAc,aAAa,eAAe,aAAa;AAClE,GAnB8B;",
  "names": ["jwt", "config"]
}
