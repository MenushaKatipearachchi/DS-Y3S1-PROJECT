{
  "version": 3,
  "sources": ["../../src/config/index.js"],
  "sourcesContent": ["import { Joi } from \"celebrate\";\nimport { moduleLogger } from \"@sliit-foss/module-logger\";\n\nconst logger = moduleLogger(\"Config\");\n\nclass Base {\n  static get schema() {\n    return {\n      PORT: Joi.number().optional(),\n      AUTH_SERVICE_BASE_URL: Joi.string().required(),\n      USER_SERVICE_BASE_URL: Joi.string().required(),\n      EMAIL_SERVICE_BASE_URL: Joi.string().required(),\n      ORDER_SERVICE_BASE_URL: Joi.string().required(),\n      PAYMENT_SERVICE_BASE_URL: Joi.string().required(),\n      REVIEW_SERVICE_BASE_URL: Joi.string().required(),\n      NOTIFICATION_SERVICE_BASE_URL: Joi.string().required(),\n      DELIVERY_SERVICE_BASE_URL: Joi.string().required(),\n      SELLER_SERVICE_BASE_URL: Joi.string().required(),\n    };\n  }\n  static get values() {\n    return {\n      PORT: process.env.PORT ?? 2002,\n      AUTH_SERVICE_BASE_URL: process.env.AUTH_SERVICE_BASE_URL,\n      USER_SERVICE_BASE_URL: process.env.USER_SERVICE_BASE_URL,\n      EMAIL_SERVICE_BASE_URL: process.env.EMAIL_SERVICE_BASE_URL,\n      ORDER_SERVICE_BASE_URL: process.env.ORDER_SERVICE_BASE_URL,\n      PAYMENT_SERVICE_BASE_URL: process.env.PAYMENT_SERVICE_BASE_URL,\n      REVIEW_SERVICE_BASE_URL: process.env.REVIEW_SERVICE_BASE_URL,\n      NOTIFICATION_SERVICE_BASE_URL: process.env.NOTIFICATION_SERVICE_BASE_URL,\n      DELIVERY_SERVICE_BASE_URL: process.env.DELIVERY_SERVICE_BASE_URL,\n      SELLER_SERVICE_BASE_URL: process.env.SELLER_SERVICE_BASE_URL,\n    };\n  }\n}\n\nconst config = Base.values;\n\nconst { error } = Joi.object(Base.schema).validate(config);\n\nif (error) {\n  logger.error(\n    `Environment validation failed. \\nDetails - ${error.details[0].message}\\nExiting...`\n  );\n  process.exit(1);\n}\n\nexport default config;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoB;AACpB,2BAA6B;AAE7B,MAAM,aAAS,mCAAa,QAAQ;AAEpC,MAAM,KAAK;AAAA,EACT,WAAW,SAAS;AAClB,WAAO;AAAA,MACL,MAAM,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC5B,uBAAuB,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC7C,uBAAuB,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC7C,wBAAwB,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC9C,wBAAwB,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC9C,0BAA0B,qBAAI,OAAO,EAAE,SAAS;AAAA,MAChD,yBAAyB,qBAAI,OAAO,EAAE,SAAS;AAAA,MAC/C,+BAA+B,qBAAI,OAAO,EAAE,SAAS;AAAA,MACrD,2BAA2B,qBAAI,OAAO,EAAE,SAAS;AAAA,MACjD,yBAAyB,qBAAI,OAAO,EAAE,SAAS;AAAA,IACjD;AAAA,EACF;AAAA,EACA,WAAW,SAAS;AAClB,WAAO;AAAA,MACL,MAAM,QAAQ,IAAI,QAAQ;AAAA,MAC1B,uBAAuB,QAAQ,IAAI;AAAA,MACnC,uBAAuB,QAAQ,IAAI;AAAA,MACnC,wBAAwB,QAAQ,IAAI;AAAA,MACpC,wBAAwB,QAAQ,IAAI;AAAA,MACpC,0BAA0B,QAAQ,IAAI;AAAA,MACtC,yBAAyB,QAAQ,IAAI;AAAA,MACrC,+BAA+B,QAAQ,IAAI;AAAA,MAC3C,2BAA2B,QAAQ,IAAI;AAAA,MACvC,yBAAyB,QAAQ,IAAI;AAAA,IACvC;AAAA,EACF;AACF;AA7BM;AA+BN,MAAM,SAAS,KAAK;AAEpB,MAAM,EAAE,MAAM,IAAI,qBAAI,OAAO,KAAK,MAAM,EAAE,SAAS,MAAM;AAEzD,IAAI,OAAO;AACT,SAAO;AAAA,IACL;AAAA,YAA8C,MAAM,QAAQ,CAAC,EAAE;AAAA;AAAA,EACjE;AACA,UAAQ,KAAK,CAAC;AAChB;AAEA,IAAO,iBAAQ;",
  "names": []
}
