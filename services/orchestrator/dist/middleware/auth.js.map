{
  "version": 3,
  "sources": ["../../src/middleware/auth.js"],
  "sourcesContent": ["import context from \"express-http-context\";\nimport createError from \"http-errors\";\nimport { asyncHandler, tracedAsyncHandler } from \"@sliit-foss/functions\";\nimport { moduleLogger } from \"@sliit-foss/module-logger\";\nimport { protectedRoutes } from \"@app/constants\";\nimport { getAuthUser } from \"../services\";\n\nconst logger = moduleLogger(\"Auth-middleware\");\n\nexport const authorizer = tracedAsyncHandler(async function authorizer(req) {\n  if (protectedRoutes.find((route) => req.path.match(new RegExp(route)))) {\n    return;\n  }\n  context.set(\"headers\", req.headers);\n  const user = await getAuthUser();\n  req.user = user;\n});\n\nexport const permittedRoles = (roles) =>\n  asyncHandler(function roleGuard(req) {\n    if (roles && !roles.includes(req.user.role)) {\n      logger.error(\n        `Forbidden route - access denied - user_id: ${req.user._id} - role: ${req.user.role}`\n      );\n      throw createError(403, \"Route forbidden\");\n    }\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAoB;AACpB,yBAAwB;AACxB,uBAAiD;AACjD,2BAA6B;AAC7B,uBAAgC;AAChC,sBAA4B;AAE5B,MAAM,aAAS,mCAAa,iBAAiB;AAEtC,MAAM,iBAAa,qCAAmB,sCAAeA,YAAW,KAAK;AAC1E,MAAI,iCAAgB,KAAK,CAAC,UAAU,IAAI,KAAK,MAAM,IAAI,OAAO,KAAK,CAAC,CAAC,GAAG;AACtE;AAAA,EACF;AACA,8BAAAC,QAAQ,IAAI,WAAW,IAAI,OAAO;AAClC,QAAM,OAAO,UAAM,6BAAY;AAC/B,MAAI,OAAO;AACb,GAP6C,aAO5C;AAEM,MAAM,iBAAiB,wBAAC,cAC7B,+BAAa,gCAAS,UAAU,KAAK;AACnC,MAAI,SAAS,CAAC,MAAM,SAAS,IAAI,KAAK,IAAI,GAAG;AAC3C,WAAO;AAAA,MACL,8CAA8C,IAAI,KAAK,eAAe,IAAI,KAAK;AAAA,IACjF;AACA,cAAM,mBAAAC,SAAY,KAAK,iBAAiB;AAAA,EAC1C;AACF,GAPa,YAOZ,GAR2B;",
  "names": ["authorizer", "context", "createError"]
}
