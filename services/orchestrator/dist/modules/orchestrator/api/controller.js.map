{
  "version": 3,
  "sources": ["../../../../src/modules/orchestrator/api/controller.js"],
  "sourcesContent": ["import express from \"express\";\r\nimport serviceConnector from \"@sliit-foss/service-connector\";\r\nimport { tracedAsyncHandler } from \"@sliit-foss/functions\";\r\nimport { serviceHosts } from \"../constants\";\r\n//  eslint-disable-next-line no-unused-vars\r\nimport { permittedRoles } from \"../../../middleware\";\r\nimport { routeGuards } from \"./middleware\";\r\n\r\nconst orchestrator = express.Router();\r\n\r\nconst connector = serviceConnector({ service: \"Proxy\" });\r\n\r\norchestrator.all(\r\n  \"/:api_version/:module*\",\r\n  tracedAsyncHandler(function attachMiddleware(req, res, next) {\r\n    switch (req.params.module) {\r\n      case \"users\":\r\n        return routeGuards[req.params.module](req, res, next);\r\n      case \"emails\":\r\n        return permittedRoles([\"admin\", \"seller\"])(req, res, next);\r\n      default:\r\n        return;\r\n    }\r\n  })\r\n);\r\n\r\norchestrator.all(\r\n  \"/:api_version/:module*\",\r\n  tracedAsyncHandler(function redirect(req, res) {\r\n    return connector.proxy(serviceHosts[req.params.module], req, res);\r\n  })\r\n);\r\n\r\nexport default orchestrator;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB;AACpB,+BAA6B;AAC7B,uBAAmC;AACnC,uBAA6B;AAE7B,wBAA+B;AAC/B,IAAAA,qBAA4B;AAE5B,MAAM,eAAe,eAAAC,QAAQ,OAAO;AAEpC,MAAM,gBAAY,yBAAAC,SAAiB,EAAE,SAAS,QAAQ,CAAC;AAEvD,aAAa;AAAA,EACX;AAAA,MACA,qCAAmB,gCAAS,iBAAiB,KAAK,KAAK,MAAM;AAC3D,YAAQ,IAAI,OAAO,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,+BAAY,IAAI,OAAO,MAAM,EAAE,KAAK,KAAK,IAAI;AAAA,MACtD,KAAK;AACH,mBAAO,kCAAe,CAAC,SAAS,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,MAC3D;AACE;AAAA,IACJ;AAAA,EACF,GATmB,mBASlB;AACH;AAEA,aAAa;AAAA,EACX;AAAA,MACA,qCAAmB,gCAAS,SAAS,KAAK,KAAK;AAC7C,WAAO,UAAU,MAAM,8BAAa,IAAI,OAAO,MAAM,GAAG,KAAK,GAAG;AAAA,EAClE,GAFmB,WAElB;AACH;AAEA,IAAO,qBAAQ;",
  "names": ["import_middleware", "express", "serviceConnector"]
}
