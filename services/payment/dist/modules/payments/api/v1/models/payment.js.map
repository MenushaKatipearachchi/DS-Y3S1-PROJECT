{
  "version": 3,
  "sources": ["../../../../../../src/modules/payments/api/v1/models/payment.js"],
  "sourcesContent": ["import mongoose from \"mongoose\";\r\nimport mongoosePaginate from \"mongoose-paginate-v2\";\r\n\r\nconst { Schema } = mongoose;\r\n\r\nconst PaymentSchema = new Schema(\r\n  // {\r\n  //   user_id: {\r\n  //     type: mongoose.Schema.Types.ObjectId,\r\n  //     ref: \"User\",\r\n  //     required: false,\r\n  //   },\r\n  //   amount: {\r\n  //     type: Number,\r\n  //     required: true,\r\n  //   },\r\n  //   currency: {\r\n  //     type: String,\r\n  //     required: true,\r\n  //   },\r\n  //   payment_method: {\r\n  //     type: String,\r\n  //     required: true,\r\n  //     enum: [\"Credit Card\", \"Debit Card\", \"PayPal\"],\r\n  //   },\r\n  //   transactionId: {\r\n  //     type: String,\r\n  //     required: true,\r\n  //   },\r\n  //   payment_status: {\r\n  //     type: String,\r\n  //     enum: [\"Pending\", \"Processing\", \"Completed\", \"Failed\"],\r\n  //     default: \"Pending\",\r\n  //     required: true,\r\n  //   },\r\n  //   paypal_payment_details: {\r\n  //     type: {\r\n  //       intent: {\r\n  //         type: String,\r\n  //         required: true,\r\n  //         enum: [\"sale\"],\r\n  //       },\r\n  //       payer: {\r\n  //         payment_method: {\r\n  //           type: String,\r\n  //           required: true,\r\n  //           enum: [\"paypal\"],\r\n  //         },\r\n  //       },\r\n  //       redirect_urls: {\r\n  //         return_url: {\r\n  //           type: String,\r\n  //           default: \"http://localhost:4003/api/v1/payments/success\",\r\n  //           required: false,\r\n  //         },\r\n  //         cancel_url: {\r\n  //           type: String,\r\n  //           default: \"http://localhost:4003/api/v1/payments/cancel\",\r\n  //           required: false,\r\n  //         },\r\n  //       },\r\n  //       transactions: [\r\n  //         {\r\n  //           item_list: {\r\n  //             items: [\r\n  //               {\r\n  //                 name: {\r\n  //                   type: String,\r\n  //                   required: true,\r\n  //                 },\r\n  //                 sku: {\r\n  //                   type: String,\r\n  //                   required: true,\r\n  //                 },\r\n  //                 price: {\r\n  //                   type: String,\r\n  //                   required: true,\r\n  //                 },\r\n  //                 currency: {\r\n  //                   type: String,\r\n  //                   required: true,\r\n  //                 },\r\n  //                 quantity: {\r\n  //                   type: Number,\r\n  //                   required: true,\r\n  //                 },\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //           amount: {\r\n  //             currency: {\r\n  //               type: String,\r\n  //               required: true,\r\n  //             },\r\n  //             total: {\r\n  //               type: String,\r\n  //               required: true,\r\n  //             },\r\n  //           },\r\n  //           description: {\r\n  //             type: String,\r\n  //             required: true,\r\n  //           },\r\n  //         },\r\n  //       ],\r\n  //     },\r\n  //     required: false,\r\n  //   },\r\n  // },\r\n  {\r\n    amount: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    currency: {\r\n      type: String,\r\n      enum: [\"USD\", \"EUR\", \"GBP\"],\r\n      required: true,\r\n    },\r\n    card: {\r\n      cardNumber: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      cvv: {\r\n        type: String,\r\n        required: true,\r\n        minlength: 3,\r\n        maxlength: 3,\r\n      },\r\n      expirationDate: {\r\n        type: String,\r\n        required: true,\r\n        match: /^\\d{2}\\/\\d{4}$/,\r\n      },\r\n      nameOnCard: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    versionKey: \"_version\",\r\n    minimize: false,\r\n    timestamps: { createdAt: \"created_at\", updatedAt: \"updated_at\" },\r\n  }\r\n);\r\n\r\nPaymentSchema.index({ createdAt: 1 });\r\n\r\nPaymentSchema.plugin(mongoosePaginate);\r\n\r\nconst Payment = mongoose.model(\"Payment\", PaymentSchema);\r\n\r\nPayment.syncIndexes();\r\n\r\nexport { Payment };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AACrB,kCAA6B;AAE7B,MAAM,EAAE,OAAO,IAAI,gBAAAA;AAEnB,MAAM,gBAAgwGxB;AAAA,IACE,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,OAAO,OAAO,KAAK;AAAA,MAC1B,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,YAAY;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,MACA,KAAK;AAAA,QACH,MAAM;AAAA,QACN,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,MACb;AAAA,MACA,gBAAgB;AAAA,QACd,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,YAAY;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY,EAAE,WAAW,cAAc,WAAW,aAAa;AAAA,EACjE;AACF;AAEA,cAAc,MAAM,EAAE,WAAW,EAAE,CAAC;AAEpC,cAAc,OAAO,4BAAAC,OAAgB;AAErC,MAAM,UAAU,gBAAAD,QAAS,MAAM,WAAW,aAAa;AAEvD,QAAQ,YAAY;",
  "names": ["mongoose", "mongoosePaginate"]
}
