{
  "version": 3,
  "sources": ["../../../../../../src/modules/payments/api/v1/models/payment.js"],
  "sourcesContent": ["import mongoose from \"mongoose\";\nimport mongoosePaginate from \"mongoose-paginate-v2\";\n\nconst { Schema } = mongoose;\n\nconst PaymentSchema = new Schema(\n  // {\n  //   user_id: {\n  //     type: mongoose.Schema.Types.ObjectId,\n  //     ref: \"User\",\n  //     required: false,\n  //   },\n  //   amount: {\n  //     type: Number,\n  //     required: true,\n  //   },\n  //   currency: {\n  //     type: String,\n  //     required: true,\n  //   },\n  //   payment_method: {\n  //     type: String,\n  //     required: true,\n  //     enum: [\"Credit Card\", \"Debit Card\", \"PayPal\"],\n  //   },\n  //   transactionId: {\n  //     type: String,\n  //     required: true,\n  //   },\n  //   payment_status: {\n  //     type: String,\n  //     enum: [\"Pending\", \"Processing\", \"Completed\", \"Failed\"],\n  //     default: \"Pending\",\n  //     required: true,\n  //   },\n  //   paypal_payment_details: {\n  //     type: {\n  //       intent: {\n  //         type: String,\n  //         required: true,\n  //         enum: [\"sale\"],\n  //       },\n  //       payer: {\n  //         payment_method: {\n  //           type: String,\n  //           required: true,\n  //           enum: [\"paypal\"],\n  //         },\n  //       },\n  //       redirect_urls: {\n  //         return_url: {\n  //           type: String,\n  //           default: \"http://localhost:4003/api/v1/payments/success\",\n  //           required: false,\n  //         },\n  //         cancel_url: {\n  //           type: String,\n  //           default: \"http://localhost:4003/api/v1/payments/cancel\",\n  //           required: false,\n  //         },\n  //       },\n  //       transactions: [\n  //         {\n  //           item_list: {\n  //             items: [\n  //               {\n  //                 name: {\n  //                   type: String,\n  //                   required: true,\n  //                 },\n  //                 sku: {\n  //                   type: String,\n  //                   required: true,\n  //                 },\n  //                 price: {\n  //                   type: String,\n  //                   required: true,\n  //                 },\n  //                 currency: {\n  //                   type: String,\n  //                   required: true,\n  //                 },\n  //                 quantity: {\n  //                   type: Number,\n  //                   required: true,\n  //                 },\n  //               },\n  //             ],\n  //           },\n  //           amount: {\n  //             currency: {\n  //               type: String,\n  //               required: true,\n  //             },\n  //             total: {\n  //               type: String,\n  //               required: true,\n  //             },\n  //           },\n  //           description: {\n  //             type: String,\n  //             required: true,\n  //           },\n  //         },\n  //       ],\n  //     },\n  //     required: false,\n  //   },\n  // },\n  {\n    amount: {\n      type: Number,\n      required: true,\n    },\n    currency: {\n      type: String,\n      enum: [\"USD\", \"EUR\", \"GBP\"],\n      required: true,\n    },\n    card: {\n      cardNumber: {\n        type: String,\n        required: true,\n      },\n      cvv: {\n        type: String,\n        required: true,\n        minlength: 3,\n        maxlength: 3,\n      },\n      expirationDate: {\n        type: String,\n        required: true,\n        match: /^\\d{2}\\/\\d{4}$/,\n      },\n      nameOnCard: {\n        type: String,\n        required: true,\n      },\n    },\n  },\n  {\n    versionKey: \"_version\",\n    minimize: false,\n    timestamps: { createdAt: \"created_at\", updatedAt: \"updated_at\" },\n  }\n);\n\nPaymentSchema.index({ createdAt: 1 });\n\nPaymentSchema.plugin(mongoosePaginate);\n\nconst Payment = mongoose.model(\"Payment\", PaymentSchema);\n\nPayment.syncIndexes();\n\nexport { Payment };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AACrB,kCAA6B;AAE7B,MAAM,EAAE,OAAO,IAAI,gBAAAA;AAEnB,MAAM,gBAAgwGxB;AAAA,IACE,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,OAAO,OAAO,KAAK;AAAA,MAC1B,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,YAAY;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,MACA,KAAK;AAAA,QACH,MAAM;AAAA,QACN,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,MACb;AAAA,MACA,gBAAgB;AAAA,QACd,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,YAAY;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,YAAY,EAAE,WAAW,cAAc,WAAW,aAAa;AAAA,EACjE;AACF;AAEA,cAAc,MAAM,EAAE,WAAW,EAAE,CAAC;AAEpC,cAAc,OAAO,4BAAAC,OAAgB;AAErC,MAAM,UAAU,gBAAAD,QAAS,MAAM,WAAW,aAAa;AAEvD,QAAQ,YAAY;",
  "names": ["mongoose", "mongoosePaginate"]
}
