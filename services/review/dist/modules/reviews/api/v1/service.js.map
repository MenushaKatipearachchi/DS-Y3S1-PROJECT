{
  "version": 3,
  "sources": ["../../../../../src/modules/reviews/api/v1/service.js"],
  "sourcesContent": ["import {\r\n  createReview,\r\n  getAllReviews,\r\n  getReviewById,\r\n  getReviewByRating,\r\n  updateReviewById,\r\n  deleteReviewById,\r\n} from \"../../repository\";\r\n\r\n// import { hashPasswordIfProvided } from \"./helpers\";\r\n\r\nexport const serviceCreateReview = (review) => {\r\n  // if (!review.rating) throw new Error(\"Rating is required\");\r\n  // await hashPasswordIfProvided(review);\r\n  return createReview(review);\r\n};\r\n\r\nexport const serviceGetReviews = (filters, sorts, page, limit) => {\r\n  return getAllReviews({ filters, sorts, page, limit });\r\n};\r\n\r\nexport const serviceGetReviewById = (id) => {\r\n  return getReviewById(id);\r\n};\r\n\r\nexport const serviceGetReviewByRating = (rating) => {\r\n  return getReviewByRating(rating);\r\n};\r\n\r\nexport const serviceUpdateReviewById = (id, data) => {\r\n  // await hashPasswordIfProvided(data);\r\n  return updateReviewById(id, data);\r\n};\r\n\r\nexport const serviceDeleteReviewById = (id) => {\r\n  return deleteReviewById(id);\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOO;AAIA,MAAM,sBAAsB,wBAAC,WAAW;AAG7C,aAAO,gCAAa,MAAM;AAC5B,GAJmC;AAM5B,MAAM,oBAAoB,wBAAC,SAAS,OAAO,MAAM,UAAU;AAChE,aAAO,iCAAc,EAAE,SAAS,OAAO,MAAM,MAAM,CAAC;AACtD,GAFiC;AAI1B,MAAM,uBAAuB,wBAAC,OAAO;AAC1C,aAAO,iCAAc,EAAE;AACzB,GAFoC;AAI7B,MAAM,2BAA2B,wBAAC,WAAW;AAClD,aAAO,qCAAkB,MAAM;AACjC,GAFwC;AAIjC,MAAM,0BAA0B,wBAAC,IAAI,SAAS;AAEnD,aAAO,oCAAiB,IAAI,IAAI;AAClC,GAHuC;AAKhC,MAAM,0BAA0B,wBAAC,OAAO;AAC7C,aAAO,oCAAiB,EAAE;AAC5B,GAFuC;",
  "names": []
}
